def appName = "Kayko Android SDK"

def appGroupId = "com.kayako.messenger"
def appArtifactId = "kayako-messenger"
def appVersion = "1.0.10"

def appBintrayUser = "kayako"
def appUserOrg = "kayako-support"
def appBintrayApiKey = "ADD_API_KEY_HERE"

def appRepoName = "kayako-devkits"
def appPackageName = appArtifactId

def appVcsUrl = "https://github.com/kayako/Kayako-Android-SDK.git"
def appWebsiteUrl = "https://github.com/kayako/Kayako-Android-SDK"
def appIssueTrackerUrl = "https://github.com/kayako/Kayako-Android-SDK/issues"

def appDeveloperId = "kayako"
def appDeveloperName = "Neil Mathew"
def appDeveloperEmail = "neil.mathew@kayako.com"

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = appGroupId  // Maven Group ID for the artifact
version = appVersion // Library version
archivesBaseName = appArtifactId // Sets the artefact Id name

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Added to support phoenix java client
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }

}

bintray {
    user = appBintrayUser
    key = appBintrayApiKey

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = appRepoName
        name = appPackageName
        userOrg = appUserOrg
        websiteUrl = appWebsiteUrl
        issueTrackerUrl = appIssueTrackerUrl
        vcsUrl = appVcsUrl
        licenses = ['Apache-2.0']
        labels = ['kayako', 'android']
        publicDownloadNumbers = false
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'

                group appGroupId
                artifactId appArtifactId
                version appVersion

                name appName
                url appWebsiteUrl

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id appDeveloperId
                        name appDeveloperName
                        email appDeveloperEmail
                    }
                }
                scm {
                    connection appVcsUrl
                    developerConnection appVcsUrl
                    url appWebsiteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
allprojects {

    repositories {
        mavenCentral() // jcenter() works as well because it pulls from Maven Central

        // Used for Internal Testing
        maven { url 'https://jitpack.io' }
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile 'com.android.support:support-v4:24.2.0'
    compile 'com.android.support:design:24.2.0'

    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.okio:okio:1.9.0'
    compile 'com.google.code.gson:gson:2.4'
    compile 'org.threeten:threetenbp:1.3.3'
    compile 'com.github.bumptech.glide:glide:3.8.0'

    compile 'com.kayako:kayako:1.0.+'
    compile 'com.kayako.kre:kre-client:0.2.+'

    // TODO: Comment when production ready
    // compile fileTree(dir: 'libs', include: ['*.jar'])
    // compile('com.github.metalwihen:Kayako-Java-SDK:v0.0.33') { // uses okhttp 3.4.1
    //     exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    // }
    // compile('com.github.metalwihen:JavaPhoenixChannels:v0.2.12') { // uses latest okhttp
    //  // used for real time updates - My fork of the official Java KRE Client
    //    exclude module: 'groovy-all'
    // }

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.android.support:support-annotations:24.2.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
}
